{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GlobalStyle","createGlobalStyle","_templateObject","LayoutContainer","styled","div","withConfig","displayName","componentId","Layout","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","propTypes","node","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","styled_components__WEBPACK_IMPORTED_MODULE_3__","HeaderWrapper","HeaderTitle","h1","HeaderDescription","p","Header","siteTitle","defaultProps","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-b0445acbf1c116b3cb0e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport Header from \"./header\"\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: \"Avenir\", sans-serif;\n    font-size: 16px;\n    margin-top: 30px;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`\n\nconst LayoutContainer = styled.div`\n  display: flex;\n  margin-top: 100px;\n  width: 35%;\n  margin: auto;\n  flex-direction: column;\n`;\n\nconst Layout = ({ children }) => (\n  <LayoutContainer>\n    <GlobalStyle />\n    {children}\n  </LayoutContainer>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components';\n// import Toggle from 'react-toggle'\n// import \"react-toggle/style.css\"\n{/* <Toggle\ndefaultChecked={true}\nicons={false}\n// onChange={this.handleBaconChange}\n/> */}\nconst HeaderWrapper = styled.div`\n\n`;\n\nconst HeaderTitle = styled.h1`\n\n`;\n\nconst HeaderDescription = styled.p`\n  line-height: 1.5;\n`;\n\nconst HeaderDescriptionText = `I'm currently a full stack software engineer currently living in San Francisco.\nI mainly enjoy writing code in the frontend (JavasSript & React) but also knowledgeable in the backend (Ruby on Rails & ExpressJS).\nI love learning and coding but also gymming, music festivals, and game of thrones.\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n\n      <HeaderTitle>HEY, I'M CHRISTIAN</HeaderTitle>\n    <HeaderDescription>{HeaderDescriptionText}</HeaderDescription>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}