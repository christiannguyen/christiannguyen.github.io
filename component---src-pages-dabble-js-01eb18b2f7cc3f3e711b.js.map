{"version":3,"sources":["webpack:///./src/pages/dabble.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/experienceLayout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_experienceLayout__WEBPACK_IMPORTED_MODULE_4__","styled_components__WEBPACK_IMPORTED_MODULE_5__","Lozenges","styled","span","withConfig","displayName","componentId","TechWrapper","div","TECH_STACK","DabblePage","a","createElement","header","subtitle","title","map","tech","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","GlobalStyle","createGlobalStyle","_templateObject","LayoutContainer","Layout","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","propTypes","node","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","styled_components__WEBPACK_IMPORTED_MODULE_3__","HeaderWrapper","HeaderTitle","h1","HeaderDescription","p","Header","siteTitle","defaultProps","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","_layout__WEBPACK_IMPORTED_MODULE_4__","HomeLink","ExperienceLayoutHeader","ExperienceLayoutSubtitle","ExperienceLayout","to"],"mappings":"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","file":"component---src-pages-dabble-js-01eb18b2f7cc3f3e711b.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ExperienceLayout from \"../components/experienceLayout\"\nimport styled from 'styled-components';\n\nconst Lozenges = styled.span`\n  padding: 3px 8px;\n  letter-spacing: 0.5px;\n  font-weight: bold;\n  margin-right: 5px;\n  border-radius: 5px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: #5885b2;\n  background-color: #cbe5ff;\n`;\n\nconst TechWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst TECH_STACK = [\n  'react',\n  'redux',\n  'express',\n  'mySQL',\n]\n\nconst DabblePage = () => (\n  <ExperienceLayout header=\"Dabble\" subtitle=\"Side Project\">\n      <SEO title=\"dabble\" />\n      <TechWrapper>\n        {TECH_STACK.map((tech) => <Lozenges>{tech}</Lozenges>)}\n      </TechWrapper>\n      <p>\n        Currently a WIP. Will update with more info.\n      </p>\n    </ExperienceLayout>\n)\n\nexport default DabblePage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport Header from \"./header\"\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: \"Avenir\", sans-serif;\n    font-size: 16px;\n    margin-top: 30px;\n  }\n`\n\nconst LayoutContainer = styled.div`\n  display: flex;\n  margin-top: 100px;\n  width: 35%;\n  margin: auto;\n  flex-direction: column;\n`;\n\nconst Layout = ({ children }) => (\n  <LayoutContainer>\n    <GlobalStyle />\n    {children}\n  </LayoutContainer>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n\n`;\n\nconst HeaderTitle = styled.h1`\n\n;`\n\nconst HeaderDescription = styled.p`\n  line-height: 1.5;\n`;\n\nconst HeaderDescriptionText = `I'm currently a full stack software engineer currently living in San Francisco.\nI mainly enjoy writing code in the frontend (JavasSript & React) but also knowledgeable in the backend (Ruby on Rails & ExpressJS).\nI love learning and coding but also gymming, music festivals, and game of thrones.\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderTitle>HEY, I'M CHRISTIAN</HeaderTitle>\n    <HeaderDescription>{HeaderDescriptionText}</HeaderDescription>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components';\nimport { Link } from \"gatsby\"\nimport Layout from './layout';\n\nconst ExperienceLayoutWrapper = styled.div`\n\n`;\n\nconst HomeLink = styled.p`\n  a {\n    text-decoration: none;\n    text-transform: uppercase;\n  }\n`;\n\nconst ExperienceLayoutHeader = styled.h1`\n  margin: 10px 0 0 0;\n`;\n\nconst ExperienceLayoutSubtitle = styled.span`\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nconst ExperienceLayout = ({ children, header, subtitle }) => (\n  <Layout>\n    <HomeLink><Link to='/'>Home</Link></HomeLink>\n    <ExperienceLayoutHeader>{header}</ExperienceLayoutHeader>\n    <ExperienceLayoutSubtitle>{subtitle}</ExperienceLayoutSubtitle>\n    {children}\n  </Layout>\n)\n\nexport default ExperienceLayout;\n"],"sourceRoot":""}