{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/skills.js","webpack:///./src/components/experience.js","webpack:///./src/pages/index.js","webpack:///./src/components/thoughts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/image.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["HeaderWrapper","styled","div","withConfig","displayName","componentId","HeaderTitle","h1","HeaderDescription","p","Header","react_default","a","createElement","SkillsWrapper","SkillsTitle","h2","SkillsUnorderedList","ul","SkillsListItem","li","SKILLS_BANK","Skills","_ref","siteTitle","map","skill","ExperienceWrapper","ExperienceTitle","ExperienceUnorderedList","ExperienceListItem","TagItem","span","EXPERIENCE_BANK","link","label","type","Experience","_ref2","gatsby_browser_entry","to","RandomArticlesLink","IndexPage","layout","seo","title","keywords","header","skills","experience","m","module","exports","require","default","GlobalStyle","createGlobalStyle","_templateObject","LayoutContainer","Layout","children","react__WEBPACK_IMPORTED_MODULE_1___default","propTypes","PropTypes","node","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","object","string","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","img","createHTML","url","this","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"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","file":"component---src-pages-index-js-e32c9428aa31c4de48cd.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n// import Toggle from 'react-toggle'\n// import \"react-toggle/style.css\"\n{\n  /* <Toggle\ndefaultChecked={true}\nicons={false}\n// onChange={this.handleBaconChange}\n/> */\n}\nconst HeaderWrapper = styled.div``\n\nconst HeaderTitle = styled.h1``\n\nconst HeaderDescription = styled.p`\n  line-height: 1.5;\n`\n\nconst Header = () => (\n  <HeaderWrapper>\n    <HeaderTitle>HEY, I'M CHRISTIAN</HeaderTitle>\n    <HeaderDescription>\n      I'm currently a full stack software engineer at{\" \"}\n      <strong>Marketo, an Adobe Company</strong> and residing in San Francisco.\n      I mainly enjoy writing code in the frontend (JavaScript & React) but also\n      knowledgeable in the backend (Ruby on Rails & ExpressJS). I love learning\n      and coding but also gymming, music festivals, and game of thrones.\n    </HeaderDescription>\n  </HeaderWrapper>\n)\n\nexport default Header\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components';\n\n\nconst SkillsWrapper = styled.div`\n\n`;\n\nconst SkillsTitle = styled.h2`\n  font-weight: 400;\n;`\n\nconst SkillsUnorderedList = styled.ul`\n`;\n\nconst SkillsListItem = styled.li`\n  padding-bottom: 5px;\n`;\nconst SKILLS_BANK = [\n  'JavaScript (ES6)',\n  'React + Redux',\n  'Ruby',\n  'Ruby on Rails',\n  'NodeJS + ExpressJS',\n  'HTML + CSS',\n  'mySQL & mongoDB',\n  'Mocha & Jest',\n  'Webpack',\n];\n\nconst Skills = ({ siteTitle }) => (\n  <SkillsWrapper>\n    <SkillsTitle>Things I Know</SkillsTitle>\n    <SkillsUnorderedList>\n      {SKILLS_BANK.map((skill) => (\n        <SkillsListItem>{skill}</SkillsListItem>\n      ))}\n    </SkillsUnorderedList>\n  </SkillsWrapper>\n)\n\nexport default Skills;\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst ExperienceWrapper = styled.div``\n\nconst ExperienceTitle = styled.h2`\n  font-weight: 400;\n`\n\nconst ExperienceUnorderedList = styled.ul`\n  /* list-style-type: ; */\n`\n\nconst ExperienceListItem = styled.li`\n  padding-bottom: 10px;\n`\n\nconst TagItem = styled.span`\n  border: 1px solid #cfdae6;\n  border-radius: 5px;\n  color: #2f363d;\n  font-weight: 500;\n  margin-left: 10px;\n  padding: 1px 5px;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n  background-color: #cfdae6;\n`\n\nconst EXPERIENCE_BANK = [\n  {\n    link: \"marketo\",\n    label: \"Marketo, an Adobe Company\",\n    type: \"work\",\n  },\n  {\n    link: \"procore\",\n    label: \"Procore Technologies\",\n    type: \"work\",\n  },\n  {\n    link: \"jabber\",\n    label: \"Jabber\",\n    type: \"side project\",\n  },\n]\n\n{\n  /* <Link to=\"/page-2/\">Go to page 2</Link> */\n}\n\nconst Experience = ({ siteTitle }) => (\n  <ExperienceWrapper>\n    <ExperienceTitle>Things I've Done</ExperienceTitle>\n    <ExperienceUnorderedList>\n      {EXPERIENCE_BANK.map(({ link, label, type }) => (\n        <ExperienceListItem>\n          <Link to={link}>{label}</Link>\n          <TagItem>{type}</TagItem>\n        </ExperienceListItem>\n      ))}\n    </ExperienceUnorderedList>\n  </ExperienceWrapper>\n)\n\nexport default Experience\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport Skills from \"../components/skills\"\nimport Experience from \"../components/experience\"\nimport Thoughts from \"../components/thoughts\"\nimport styled from \"styled-components\"\nimport \"../../prism.css\"\n\nconst RandomArticlesLink = styled.h2``\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      <Header />\n      <Skills />\n      <Experience />\n      {/* <Thoughts /> */}\n      <RandomArticlesLink>\n        <Link to=\"random-articles\">List of Random Articles</Link>\n      </RandomArticlesLink>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst ThoughtsWrapper = styled.div``\n\nconst ThoughtsTitle = styled.h2`\n  font-weight: 400;\n`\n\nconst ThoughtsUnorderedList = styled.ul`\n  /* list-style-type: ; */\n`\n\nconst ThoughtsListItem = styled.li`\n  padding-bottom: 10px;\n`\n\nconst TagItem = styled.span`\n  border: 1px solid #cfdae6;\n  border-radius: 5px;\n  color: #2f363d;\n  font-weight: 500;\n  margin-left: 10px;\n  padding: 1px 5px;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n  background-color: #cfdae6;\n`\n\nconst THOUGHTS_BANK = [\n  {\n    link: \"my-career\",\n    label: \"my career so far\",\n    type: \"May 7, 2019\",\n  },\n]\n\n{\n  /* <Link to=\"/page-2/\">Go to page 2</Link> */\n}\n\nconst Thoughts = ({ siteTitle }) => (\n  <ThoughtsWrapper>\n    <ThoughtsTitle>Things I Think About</ThoughtsTitle>\n    <ThoughtsUnorderedList>\n      {THOUGHTS_BANK.map(({ link, label, type }) => (\n        <ThoughtsListItem>\n          <Link to={link}>{label}</Link>\n          <TagItem>{type}</TagItem>\n        </ThoughtsListItem>\n      ))}\n    </ThoughtsUnorderedList>\n  </ThoughtsWrapper>\n)\n\nexport default Thoughts\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: \"Avenir\", sans-serif;\n    font-size: 16px;\n    margin-top: 30px;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`\n\nconst LayoutContainer = styled.div`\n  display: flex;\n  margin-top: 100px;\n  width: 35%;\n  margin: auto;\n  flex-direction: column;\n\n  @media (max-width: 800px) {\n    width: 50%;\n  }\n\n  @media (max-width: 450px) {\n    width: 80%;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <LayoutContainer>\n    <GlobalStyle />\n    {children}\n  </LayoutContainer>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from 'styled-components';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst ImageWrapper = styled.img`\nmargin-top: 5px;\nmax-width: auto;\nmax-height: 500px;\n`;\n\nconst Image = ({ src }) => (\n  <ImageWrapper src={src}/>\n)\n\nexport default Image\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}